========== pull request & merge ==========


# リモートリポはチームで共有するリポジトリのため、自由にマージできない


# マージするためにはpull requestというリクエストを出す


# 原則、他のメンバーが自分の出したpull requestを確認してマージ



========== pull request (mergeの依頼）==========


# Github上でpull requestを作成


　1. GitHubのリモートリポジトリのページを開く


　2. 「Pull requests」をクリック


　3. 「New Pull request」をクリック


　4. どのブランチ（compare)からどのブランチ(base)へpull requestを出すかを選ぶ


　5. 画面下に差分が表示されるので、確認


　6. 「Create pull request」をクリックして、作成画面に移動


　7. タイトルとコメントを記載する。


　8. 「Create pull request」をクリックして作成



========== merge (リモートリポジトリ） ==========


# merge実行


　1. GitHubのリモートリポジトリのページを開く


　2. 「Pull requests」をクリック


　3. 「Files changed」をクリックして差分を確認


　4. 「Conversation」をクリック


　5. 「Merge pull request」をクリックして、コメントを書き込む


　6. 「Confirm merge」をクリックしてmergeを実行



========== merge（ローカルリポジトリ） ==========


・Fast forword　：　mainブランチに新たなコミットが無い状態でのmerge


・Automatic maege　：　mainブランチにも新たなコミットがある状態でのmerge


・Conflict　：　Automatic mergeを行う際、mainと同じ箇所を変更している場合に起きる現象


# 指定したブランチを今いるブランチにマージ


　$ git merge <branchname>


# ブランチ同士の差分を確認　（diff)


  $ git diff <branchname1> <branchname2>


  　(<branchname1> : base, <branchname2> : compare)



# Fast forward


　$ git checkout -b <branchname>　（ブランチを作成し、そのブランチに移動）

  ↓

  --- ファイルの編集を行う ---

　　$ git add <filename>

　　$ git commit -m "<commit message>"

  ↓

  $ git checkout main　（mainブランチに移動）

  ↓

  $ git diff <branchname1> <branchname2>　（差分を確認)

  ↓

  $ git merge <branchname2>　（<branchname2>をmainブランチにmerge）

  ↓

  $ git branch -d <branchname2>　（不要になったブランチを削除）